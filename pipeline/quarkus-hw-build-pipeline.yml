apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: quarkus-hw-build-pipeline
  labels:
    app: quarkus-hw
spec:
  params:
    - name: git-repository-url
  tasks:
    - name: git-clone
      taskRef:
        name: git-clone
        kind: Task
      params:
        - name: url
          value: $(params.git-repository-url)
      workspaces:
        - name: output
          workspace: workspace
    - name: maven-verify
      taskRef:
        name: maven
        kind: Task
      params:
        - name: MAVEN_IMAGE
          value: 'registry.access.redhat.com/ubi9/openjdk-21:1.20'
        - name: GOALS
          value:
            - '-B'
            - '-ntp'
            - verify
      workspaces:
        - name: source
          workspace: workspace
        - name: maven-settings
          workspace: maven-settings
      volumeMounts:
        - name: maven-repo
          mountPath: /workspace/.m2  # Montando o volume no diretório correto
      runAfter:
        - git-clone
    - name: maven-extract-project-version
      taskRef:
        name: maven-extract-project-version
        kind: Task
      workspaces:
        - name: source
          workspace: workspace
      runAfter:
        - git-clone
    - name: buildah-bud-and-push
      taskRef:
        name: buildah
        kind: Task
      params:
        - name: DOCKERFILE
          value: 'src/main/docker/Dockerfile.jvm'
        - name: IMAGE
          value: 'quay.io/stephennimmo/quarkus-hw:$(tasks.maven-extract-project-version.results.version)'
      workspaces:
        - name: source
          workspace: workspace
      runAfter:
        - maven-extract-project-version
        - maven-verify
  workspaces:
    - name: workspace
    - name: maven-settings
  volumes:
    - name: maven-repo
      emptyDir: {}  # Usando um volume temporário para o repositório Maven